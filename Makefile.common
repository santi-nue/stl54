# Makefile.common for GENERIC plugin
#     Contains the stuff from Makefile.am and Makefile.nmake that is
#     a) common to both files and
#     b) portable between both files
#
# $Id: Makefile.common 20379 2007-01-10 20:19:16Z jake $
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

# the name of the plugin
PLUGIN_NAME = generic

# the dissector sources (without any helpers)
DISSECTOR_SRC = \
	packet-generic.c

# corresponding headers
DISSECTOR_INCLUDES =	\
	generic.h


# Dissector core sources.
# All files specified here do NOT depend of wireshark.
DISSECTOR_CORE_UT_SRC = \
	byte_interpret.cpp \
	byte_interpret_compute_expression.cpp T_expression.cpp \
  T_interpret_data.cpp T_interpret_read_values.cpp T_interpret_byte_order.cpp \
  T_interpret_output.cpp T_interpret_decode.cpp T_interpret_inside_frame.cpp T_interpret_chrono.cpp \
  T_perf_time.cpp \
  T_interpret_value.cpp \
  T_attribute_value.cpp T_frame_data.cpp T_frame_data_write.cpp T_type_definitions.cpp \
  C_value.cpp \
  byte_interpret_builder.cpp \
  byte_interpret_build_types.cpp \
  byte_interpret_build_types_context.cpp \
  byte_interpret_build_types_read_token.cpp \
  byte_interpret_parse.cpp byte_interpret_common.cpp \
  CT_debug_object_counter.cpp

DISSECTOR_CORE_OTHER_SRC = \
  byte_interpret_build_types_netpdl.cpp \
  tinystr.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp

DISSECTOR_CORE_SRC = $(DISSECTOR_CORE_UT_SRC) $(DISSECTOR_CORE_OTHER_SRC)


# Dissector helpers.  They're included in the source files in this
# directory, but they're not dissectors themselves, i.e. they're not
# used to generate "register.c").
DISSECTOR_SUPPORT_SRC =	$(DISSECTOR_CORE_SRC) \
	generic.cpp T_generic_protocol_data.cpp \
  C_byte_interpret_wsgd_builder.cpp C_byte_interpret_wsgd_builder_base.cpp

